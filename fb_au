#!/usr/bin/env python
# -*- coding: utf-8 -*-

from optparse import OptionParser
from os import path
from lxml import etree
from pdb import set_trace
import gtk


def find_all_ns(elem, tag):

    result = []
    for ns in elem.nsmap.values():
        result = result + elem.findall('.//{%s}%s' %(ns, tag))
    return result  


def parse_file(filename):

    try:
        tree = etree.parse(filename)
        root = tree.getroot()
        title_info = find_all_ns(root, 'title-info')[0]
        author = find_all_ns(title_info, 'author')[0]
    except:
        return ''

    first_name_text = last_name_text = middle_name_text = ''

    last_name_list = find_all_ns(author, 'last-name')
    if last_name_list:
        last_name = last_name_list[0]
        last_name_text = last_name.text
    else:
        last_name = etree.SubElement(author, 'last-name')

    first_name_list = find_all_ns(author, 'first-name')
    if first_name_list:
        first_name = first_name_list[0]
        first_name_text = first_name.text
    else:
        first_name = etree.SubElement(author, 'first-name')

    middle_name_list = find_all_ns(author, 'middle-name')
    if middle_name_list:
        middle_name = middle_name_list[0]
        middle_name_text = middle_name.text
    else:
        middle_name = etree.SubElement(author, 'middle-name')

    dialog = gtk.Dialog(buttons=(gtk.STOCK_OK, gtk.RESPONSE_OK,
                             gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL))

    table = gtk.Table(3, 2)
    table.set_row_spacings(4)
    table.set_col_spacings(4)
    dialog.vbox.pack_start(table, True, True, 0)

    fn_label = gtk.Label('First Name')
    table.attach(fn_label, 0, 1, 0, 1)
    fn_entr = gtk.Entry()
    fn_entr.set_text(first_name_text)
    table.attach(fn_entr, 1, 2, 0, 1)
    fn_label.set_mnemonic_widget(fn_entr)

    mn_label = gtk.Label('Middle Name')
    table.attach(mn_label, 0, 1, 1, 2)
    mn_entr = gtk.Entry()
    mn_entr.set_text(middle_name_text)
    table.attach(mn_entr, 1, 2, 1, 2)
    mn_label.set_mnemonic_widget(mn_entr)    

    ln_label = gtk.Label('Last Name')
    table.attach(ln_label, 0, 1, 2, 3)
    ln_entr = gtk.Entry()
    ln_entr.set_text(last_name_text)
    table.attach(ln_entr, 1, 2, 2, 3)
    ln_label.set_mnemonic_widget(ln_entr)

    dialog.show_all()
    response = dialog.run()
    if response == gtk.RESPONSE_OK:
        first_name.text = unicode(fn_entr.get_text())
        middle_name.text = unicode(mn_entr.get_text())
        last_name.text = unicode(ln_entr.get_text())
        return etree.tostring(root, pretty_print=True, encoding='utf-8')
    return ''


def main():

    opt = OptionParser(description='',
                        prog='fb_au',
                        version='0.1',
                        usage=u'fb_au [FILE]')  
    options, arguments = opt.parse_args()

    for filename in arguments:
        if not path.exists(filename):
            continue
        if not path.isfile(filename):
            continue
        tree_string = parse_file(filename)
        if tree_string:
            out_file = open(filename, 'w')
            out_file.write(tree_string)
            out_file.close()
            print('Файл перезаписан!')
        else:
            print('Не удалось обработать файл %s' %filename)


if __name__ == '__main__':
    main()